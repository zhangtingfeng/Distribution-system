<?xml version="1.0" encoding="utf-8"?>
<RewriterConfig>
  <RewriterRule>
    <LookFor>~/05XianChangHuoDong/WF_YaoYiYao-(\d+)-(\d+).aspx</LookFor>
    <SendTo><![CDATA[~/05XianChangHuoDong/WF_YaoYiYao.aspx?ShopClientID=$1&XianChangHuoDongID=$2]]></SendTo>
  </RewriterRule>

  <RewriterRule>
    <LookFor>~/05XianChangHuoDong/WF_ChouJiang-(\d+)-(\d+).aspx</LookFor>
    <SendTo><![CDATA[~/05XianChangHuoDong/WF_ChouJiang.aspx?ShopClientID=$1&XianChangHuoDongID=$2]]></SendTo>
  </RewriterRule>
  
</RewriterConfig>



<!--IIS6.0配置HTTP压缩,提升网站响应速度
IIS6.0配置HTTP压缩的步骤
1.   HTTP压缩概述
HTTP压缩是在Web服务器和浏览器间传输压缩文本内容的方法。HTTP压缩采用通用的压缩算法如gzip等压缩HTML、JavaScript或CSS文件。
2.   HTTP压缩工作原理
Web服务器处理HTTP压缩的工作原理如下：
-   Web服务器接收到浏览器的HTTP请求后，检查浏览器是否支持HTTP压缩；
-   如果浏览器支持HTTP压缩，Web服务器检查请求文件的后缀名；
-   如果请求文件是HTML、CSS等静态文件，Web服务器到压缩缓冲目录中检查是否已经存在请求文件的最新压缩文件；
-   如果请求文件的压缩文件不存在，Web服务器向浏览器返回未压缩的请求文件，并在压缩缓冲目录中存放请求文件的压缩文件；
-   如果请求文件的最新压缩文件已经存在，则直接返回请求文件的压缩文件；
-   如果请求文件是ASPX等动态文件，Web服务器动态压缩内容并返回浏览器，压缩内容不存放到压缩缓存目录中。
3.   IIS   6.0中配置HTTP压缩的步骤
IIS   6.0中配置HTTP压缩的步骤如下：
-   打开Internet信息服务(IIS)管理器，右击"网站"->"属性"，选择"服务"。在"HTTP压缩"框中选中"压缩应用程序文件"和"压缩静态文件"，按需要设置"临时目录"和"临时目录的最大限制"；
-   在Internet信息服务(IIS)管理器，右击"Web服务扩展"->"增加一个新的Web服务扩展..."，在"新建Web服务扩展"框中输入扩展名"HTTP   Compression"，添加"要求的文件"为C:\WINDOWS\system32\inetsrv\gzip.dll，其中Windows系统目录根据您的安装可能有所不同，选中"设置扩展状态为允许"；
-   使用文本编辑器打开C:\Windows\System32\inetsrv\MetaBase.xml(建议先备份),找到Location   ="/LM/W3SVC/Filters/Compression/gzip"，如果需要压缩动态文件，则将HcDoDynamicCompression设置为"TRUE"，并在HcScriptFileExtensions中增加您要压缩的动态文件后缀名，如aspx；如果需要压缩静态文件，则将HcDoStaticCompression和HcDoOnDemandCompression设置为"TRUE"，并在HcFileExtensions中增加您需要压缩的静态文件后缀名，如xml、css等；HcDynamicCompressionLevel和HcOnDemandCompLevel表示需要的压缩率，数字越小压缩率越低；
-   编辑完毕后保存MetaBase.xml文件；如果文件无法保存，则可能IIS正在使用该文件。打开"开始"->"管理工具"->"服务"，停止"IIS   Admin   Service"后，即可保存；
-   最后，重新启动IIS；-->



<!--关于asp.net程序第一次运行速度慢的问题解决办法
以前一直以为asp.net程序第一次运行速度慢的问题是因为第一次运行时需要编译，虽说自己当时心中也有疑问，但是没有深究。

今天查看微软技术文档，发现了这个秘密：

.net程序第一次运行速度慢的问题原因是第一次运行需要验证数字签名。

当程序里面需要调用到一些 Authenticode Signed的.NET Assembly的时候，它需要连接到外网来验证数字证书。当服务器是无法连接到外网时，这个校验证书的过程需要等到timeout之后才会结束。

解决办法：

1、让电脑能连上网

2、禁止证书的验证过程

禁止证书的验证过程：
1、在下面aspnet.config文件中加入下面内容：

32位系统：C:\Windows\Microsoft.NET\Framework\v2.0.50727\aspnet.config

64位系统：C:\Windows\Microsoft.NET\Framework64\v2.0.50727\aspnet.config

加入内容：

<?xml version="1.0" encoding="utf-8"?>

<configuration>

  <runtime>

    <generatePublisherEvidence enabled="false"/>

  </runtime>

</configuration>
2、对"Network Service"帐号下运行的所有程序禁止证书检查

标签: asp.net
绿色通道： 好文要顶 我 收藏该文与我联系
Tom.汤
 - 5
粉丝 - 11
+加
2
0
(请您对文章做出评价)
« 上一篇：翻译:ASP.NET MVC的概览
» 下一篇：visual studio 2008 xml 编辑 变灰，编辑器失效
posted @ 2011-04-26 12:25 Tom.汤 阅读(945) 评论(1) 编辑 收藏-->




<!--使用 Web网站 创建网站，在“生成->发布”的时候，要将“允许更新此预编译站点”的选项去掉！这样，各种页面就会预编译到DLL文件，而不是原样发布。这样，网站无需再进行更多的预编译，访问速度大大提高也可以对你的网站设计保密。

　　如果不将“允许更新此预编译站点”的选项去掉，只有.cs文件被预编译到DLL文件，而其余的文件类型不会预编译到DLL文件，这样的话，在访问网站时，ASP.net需要先把未编译的部分纠错、编译，让后才回应你的访问，在预编译一遍后，访问将会使用刚才预编译的结果文件，所以，首次访问一个页面，速度可能十分慢，接下来再访问，速度就快了。

　　Web Application创建的网站不具有此功能。-->


<!--把应用程序连接池里性能 空闲超时 的勾去掉就行了-->



<!--你在网上各种论坛上有签名图片吧?
把图片放到你自己的服务器上,,,这样每次显示网页的时候,就会访问你的服务器的
如果看看没效果,就改成aspx,然后由aspx返回图片,这样就一定会触发asp.net了-->
