//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace _05Client.eggsoft.cn.SR_Upload {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SR_Upload.WebService_UploadSoap")]
    public interface WebService_UploadSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        _05Client.eggsoft.cn.SR_Upload.UploadFileResponse UploadFile(_05Client.eggsoft.cn.SR_Upload.UploadFileRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        System.Threading.Tasks.Task<_05Client.eggsoft.cn.SR_Upload.UploadFileResponse> UploadFileAsync(_05Client.eggsoft.cn.SR_Upload.UploadFileRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fBytes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string DirectoryName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string eMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string strOldImgName;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(byte[] fBytes, string fileName, string DirectoryName, string eMsg, string strOldImgName) {
            this.fBytes = fBytes;
            this.fileName = fileName;
            this.DirectoryName = DirectoryName;
            this.eMsg = eMsg;
            this.strOldImgName = strOldImgName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadFileResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string eMsg;
        
        public UploadFileResponse() {
        }
        
        public UploadFileResponse(string UploadFileResult, string eMsg) {
            this.UploadFileResult = UploadFileResult;
            this.eMsg = eMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService_UploadSoapChannel : _05Client.eggsoft.cn.SR_Upload.WebService_UploadSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService_UploadSoapClient : System.ServiceModel.ClientBase<_05Client.eggsoft.cn.SR_Upload.WebService_UploadSoap>, _05Client.eggsoft.cn.SR_Upload.WebService_UploadSoap {
        
        public WebService_UploadSoapClient() {
        }
        
        public WebService_UploadSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService_UploadSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService_UploadSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService_UploadSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _05Client.eggsoft.cn.SR_Upload.UploadFileResponse _05Client.eggsoft.cn.SR_Upload.WebService_UploadSoap.UploadFile(_05Client.eggsoft.cn.SR_Upload.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public string UploadFile(byte[] fBytes, string fileName, string DirectoryName, ref string eMsg, string strOldImgName) {
            _05Client.eggsoft.cn.SR_Upload.UploadFileRequest inValue = new _05Client.eggsoft.cn.SR_Upload.UploadFileRequest();
            inValue.fBytes = fBytes;
            inValue.fileName = fileName;
            inValue.DirectoryName = DirectoryName;
            inValue.eMsg = eMsg;
            inValue.strOldImgName = strOldImgName;
            _05Client.eggsoft.cn.SR_Upload.UploadFileResponse retVal = ((_05Client.eggsoft.cn.SR_Upload.WebService_UploadSoap)(this)).UploadFile(inValue);
            eMsg = retVal.eMsg;
            return retVal.UploadFileResult;
        }
        
        public System.Threading.Tasks.Task<_05Client.eggsoft.cn.SR_Upload.UploadFileResponse> UploadFileAsync(_05Client.eggsoft.cn.SR_Upload.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
    }
}
